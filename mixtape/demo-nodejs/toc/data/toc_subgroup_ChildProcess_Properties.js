define([], function() { return {"children":[{"id":"toc_property_channel_1","target":"module_child_process.html#property_channel_1","text":"`channel` {Object} A pipe representing the IPC channel to the child process. ","icon":false},{"id":"toc_property_connected_1","target":"module_child_process.html#property_connected_1","text":"`connected` {boolean} Set to `false` after `subprocess.disconnect()` is called. ","icon":false},{"id":"toc_property_killed","target":"module_child_process.html#property_killed","text":"`killed` {boolean} Set to `true` after `subprocess.kill()` is used to successfully send a signal to the child process. ","icon":false},{"id":"toc_property_pid_1","target":"module_child_process.html#property_pid_1","text":"`pid` {number} Integer ","icon":false},{"id":"toc_property_stderr_1","target":"module_child_process.html#property_stderr_1","text":"`stderr` {stream.Readable} ","icon":false},{"id":"toc_property_stdin_1","target":"module_child_process.html#property_stdin_1","text":"`stdin` {stream.Writable} ","icon":false},{"id":"toc_property_stdio_1","target":"module_child_process.html#property_stdio_1","text":"`stdio` {Array} ","icon":false},{"id":"toc_property_stdout_1","target":"module_child_process.html#property_stdout_1","text":"`stdout` {stream.Readable} ","icon":false}],"ancestry":["toc_module_child_process","toc_class_ChildProcess","toc_subgroup_ChildProcess_Properties"]}; });